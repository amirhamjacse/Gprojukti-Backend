# Generated by Django 4.2.7 on 2024-07-09 08:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('discount', '0002_initial'),
        ('product_management', '0001_initial'),
        ('human_resource_management', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0002_initial'),
        ('location', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='supplier',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='supplier',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='shopwisezerostocklog',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_wise_zero_stock_log_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='shopwisezerostocklog',
            name='office_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_wise_zero_stock_logs', to='location.officelocation'),
        ),
        migrations.AddField(
            model_name='shopwisezerostocklog',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_wise_zero_stock_logs', to='product_management.product'),
        ),
        migrations.AddField(
            model_name='shopwisezerostocklog',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_wise_zero_stock_log_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='seller',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sellers', to='product_management.brand'),
        ),
        migrations.AddField(
            model_name='seller',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='seller',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seller_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productwarranty',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_warranty_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productwarranty',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_warrantys', to='product_management.product'),
        ),
        migrations.AddField(
            model_name='productwarranty',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_warranty_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstocktransferlog',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_transfer_log_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstocktransferlog',
            name='product_stock',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_transfer_logs', to='product_management.productstocktransfer'),
        ),
        migrations.AddField(
            model_name='productstocktransferlog',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_transfer_log_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstocktransfer',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_transfers', to='human_resource_management.employeeinformation'),
        ),
        migrations.AddField(
            model_name='productstocktransfer',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_transfer_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstocktransfer',
            name='from_shop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_shop_product_stock_transfers', to='location.officelocation'),
        ),
        migrations.AddField(
            model_name='productstocktransfer',
            name='product_requisition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_transfers', to='product_management.productstockrequisition'),
        ),
        migrations.AddField(
            model_name='productstocktransfer',
            name='product_stock',
            field=models.ManyToManyField(blank=True, related_name='product_stock_transfers', to='product_management.productstock'),
        ),
        migrations.AddField(
            model_name='productstocktransfer',
            name='to_shop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to_shop_product_stock_transfers', to='location.officelocation'),
        ),
        migrations.AddField(
            model_name='productstocktransfer',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_transfer_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstockrequisitionstatuslog',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_requisition_status_log_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstockrequisitionstatuslog',
            name='product_stock_requisition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_requisition_status_logs', to='product_management.productstockrequisition'),
        ),
        migrations.AddField(
            model_name='productstockrequisitionstatuslog',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_requisition_status_log_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstockrequisitionitemstatuslog',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_requisition_item_status_log_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstockrequisitionitemstatuslog',
            name='product_stock_requisition_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_requisition_item_status_logs', to='product_management.productstockrequisitionitem'),
        ),
        migrations.AddField(
            model_name='productstockrequisitionitemstatuslog',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_requisition_item_status_log_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstockrequisitionitem',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_requisition_item_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstockrequisitionitem',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_requisition_items', to='product_management.product'),
        ),
        migrations.AddField(
            model_name='productstockrequisitionitem',
            name='product_stock_requisition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_requisition_items', to='product_management.productstockrequisition'),
        ),
        migrations.AddField(
            model_name='productstockrequisitionitem',
            name='status_change_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_requisition_item_status_change_bys', to='human_resource_management.employeeinformation'),
        ),
        migrations.AddField(
            model_name='productstockrequisitionitem',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_requisition_item_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstockrequisition',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_requisition_approved_bys', to='human_resource_management.employeeinformation'),
        ),
        migrations.AddField(
            model_name='productstockrequisition',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_requisition_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstockrequisition',
            name='shop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_requisitions', to='location.officelocation'),
        ),
        migrations.AddField(
            model_name='productstockrequisition',
            name='status_change_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_requisition_status_change_bys', to='human_resource_management.employeeinformation'),
        ),
        migrations.AddField(
            model_name='productstockrequisition',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_requisition_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstocklog',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_log_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstocklog',
            name='product_stock',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stock_logs', to='product_management.productstock'),
        ),
        migrations.AddField(
            model_name='productstocklog',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_log_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstock',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productstock',
            name='product_price_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stocks', to='product_management.productpriceinfo'),
        ),
        migrations.AddField(
            model_name='productstock',
            name='stock_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_stocks', to='location.officelocation'),
        ),
        migrations.AddField(
            model_name='productstock',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productpriceinfo',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_price_info_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productpriceinfo',
            name='discount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_price_infos', to='discount.discount'),
        ),
        migrations.AddField(
            model_name='productpriceinfo',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_price_infos', to='product_management.product'),
        ),
        migrations.AddField(
            model_name='productpriceinfo',
            name='promo_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_price_infos', to='discount.promocode'),
        ),
        migrations.AddField(
            model_name='productpriceinfo',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_price_info_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productlog',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_logs_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productlog',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_logs', to='product_management.product'),
        ),
        migrations.AddField(
            model_name='productlog',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_logs_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productattributevalue',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attribute_value_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productattributevalue',
            name='product_attribute',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_attribute_values', to='product_management.productattribute'),
        ),
        migrations.AddField(
            model_name='productattributevalue',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_attribute_value_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productattribute',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attribute_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productattribute',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_attribute_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product_management.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='buying_tax_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_buying_tax_categorys', to='base.taxcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ManyToManyField(related_name='product_categorys', to='product_management.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='base.company'),
        ),
        migrations.AddField(
            model_name='product',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='gift_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gift_products', to='product_management.product'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_attribute_value',
            field=models.ManyToManyField(blank=True, related_name='products', to='product_management.productattributevalue'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_parent',
            field=models.ForeignKey(blank=True, help_text="Only choose a parent Category if you're creating a child category.  For example if this is PC 3 of a particular [Normal, Gaming].  Leave blank if this is a stand-alone Category (i.e. there is only one version of this category).", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product_management.product'),
        ),
        migrations.AddField(
            model_name='product',
            name='selling_tax_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_selling_tax_categorys', to='base.taxcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='sub_category',
            field=models.ManyToManyField(blank=True, related_name='product_sub_categorys', to='product_management.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product_management.supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='categorygroup',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_groups', to='base.company'),
        ),
        migrations.AddField(
            model_name='categorygroup',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_group_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='categorygroup',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_group_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='category_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='product_management.categorygroup'),
        ),
        migrations.AddField(
            model_name='category',
            name='category_parent',
            field=models.ForeignKey(blank=True, help_text="Only choose a PARENT Category if you're creating a child category.  For example if this is PC 3 of a particular [Normal, Gaming].  Leave blank if this is a stand-alone Category (i.e. there is only one version of this category).", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='product_management.category'),
        ),
        migrations.AddField(
            model_name='category',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='discount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='discount.discount'),
        ),
        migrations.AddField(
            model_name='category',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='brand',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brand_created_bys', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='brand',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand_updated_bys', to=settings.AUTH_USER_MODEL),
        ),
    ]
